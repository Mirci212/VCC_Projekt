@implements IDisposable
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime

<div class="top-navbar">
    <div class="navbar-brand-container">
        <a class="navbar-brand" href=""><img src="images/htlvb_logo.jpg" alt="Coding Contest Logo" class="navbar-logo" />Coding Contest</a>
    </div>

    <div class="nav-scrollable" id="nav-scrollable">
        <nav class="nav-container">
            <div class="nav-items">
                <div class="nav-item">
                    <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                        <MudIcon Icon="@Icons.Material.Filled.Home" Class="me-1" />
                        <span>Home</span>
                    </NavLink>
                </div>

                <AuthorizeView Roles="Admin">
                    <div class="nav-item">
                        <NavLink class="nav-link" href="change-roles">
                            <MudIcon Icon="@Icons.Material.Filled.AdminPanelSettings" Class="me-1" />
                            <span>Rollen verändern</span>
                        </NavLink>
                    </div>
                    <div class="nav-item">
                        <NavLink class="nav-link" href="support-emails">
                            <MudIcon Icon="@Icons.Material.Filled.Email" Class="me-1" />
                            <span>Support Emails</span>
                        </NavLink>
                    </div>
                    <div class="nav-item">
                        <NavLink class="nav-link" href="events-manager">
                            <MudIcon Icon="@Icons.Material.Filled.EventNote" Class="me-1" />
                            <span>Wettbewerb-Manager</span>
                        </NavLink>
                    </div>
                </AuthorizeView>

                <AuthorizeView Roles="Admin,Editor">
                    <div class="nav-item">
                        <NavLink class="nav-link" href="levels-manager">
                            <MudIcon Icon="@Icons.Material.Filled.Edit" Class="me-1" />
                            <span>Level-Manager</span>
                        </NavLink>
                    </div>
                    <div class="nav-item">
                        <NavLink class="nav-link" href="event-statistics">
                            <MudIcon Icon="@Icons.Material.Filled.PieChart" Class="me-1" />
                            <span>Event Statistiken</span>
                        </NavLink>
                    </div>
                </AuthorizeView>

                <AuthorizeView>
                    <Authorized>
                        <div class="nav-item">
                            <NavLink class="nav-link" href="my-events">
                                <MudIcon Icon="@Icons.Material.Filled.CalendarToday" Class="me-1" />
                                <span>Meine Events</span>
                            </NavLink>
                        </div>
                    </Authorized>
                </AuthorizeView>

                <div class="nav-item">
                    <NavLink class="nav-link" href="events">
                        <MudIcon Icon="@Icons.Material.Filled.Event" Class="me-1" />
                        <span>Events</span>
                    </NavLink>
                </div>

                <div class="nav-item">
                    <NavLink class="nav-link" href="info">
                        <MudIcon Icon="@Icons.Material.Filled.Info" Class="me-1" />
                        <span>Info</span>
                    </NavLink>
                </div>
            </div>
            <div class="nav-item last-child">
                <AuthorizeView>
                    <Authorized>
                        <div class="nav-item">
                            <NavLink class="nav-link" href="Account/Manage" onclick="adjustContentPadding()">
                                <MudIcon Icon="@Icons.Material.Filled.Person" Class="me-1" />
                                <span>@context.User.Identity?.Name</span>
                            </NavLink>
                        </div>
                        <div class="nav-item">
                            <form action="Account/Logout" method="post">
                                <AntiforgeryToken />
                                <input type="hidden" name="ReturnUrl" value="@currentUrl" />
                                <button type="submit" class="nav-link" onclick="adjustContentPadding()">
                                    <MudIcon Icon="@Icons.Material.Filled.Logout" Class="me-1" />
                                    <span>Logout</span>
                                </button>
                            </form>
                        </div>
                    </Authorized>
                    <NotAuthorized>
                        <div class="nav-item">
                            <NavLink class="nav-link" href="Account/Register" onclick="adjustContentPadding()">
                                <MudIcon Icon="@Icons.Material.Filled.PersonAdd" Class="me-1" />
                                <span>Register</span>
                            </NavLink>
                        </div>
                        <div class="nav-item">
                            <NavLink class="nav-link" href="Account/Login" onclick="adjustContentPadding()">
                                <MudIcon Icon="@Icons.Material.Filled.Login" Class="me-1" />
                                <span>Login</span>
                            </NavLink>
                        </div>
                    </NotAuthorized>
                </AuthorizeView>
            </div>
        </nav>
    </div>
</div>

@code {
    private string? currentUrl;

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await JSRuntime.InvokeVoidAsync("adjustContentPadding");
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        Snackbar.Clear();
        StateHasChanged();
        JSRuntime.InvokeVoidAsync("adjustContentPadding"); // Call the function on location change
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}