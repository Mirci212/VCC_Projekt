@page "/change-roles"
@using System.Collections.Generic

<PageTitle>Rolle ändern</PageTitle>

<h1 class="page-title">Rollen ändern</h1>

<!-- Controls (Autocomplete und Button) -->
<div class="alerts">
    @if (showErrorAlert)
    {
        <MudAlert Severity="Severity.Error" ContentAlignment="HorizontalAlignment.Center" ShowCloseIcon="true" CloseIconClicked="@(() => CloseMe("Error"))">@errorMessage</MudAlert>
    }
    @if (showSuccessAlert)
    {
        <MudAlert Severity="Severity.Success" ContentAlignment="HorizontalAlignment.Center" ShowCloseIcon="true" CloseIconClicked="@(() => CloseMe("Success"))">@successMessage</MudAlert>
    }

</div>

<!-- DataGrid -->
<div class="datagrid">
    <MudDataGrid T="EditRoleUser" Items="@users"
        SortMode="SortMode.Multiple" Filterable="true" ReadOnly="false"
                 QuickFilter="@_quickFilter" EditMode="DataGridEditMode.Form"
        CommittedItemChanges="@CommittedItemChanges" EditTrigger="DataGridEditTrigger.Manual">
        <ToolBarContent>
            <MudText Typo="Typo.h6">Rollen der Users</MudText>
            <MudSpacer />
            <MudTextField @bind-Value="_searchString" Placeholder="Search" Adornment="Adornment.Start" Immediate="true"
            AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
        </ToolBarContent>

        <Columns>
            @if (!string.IsNullOrEmpty(_searchString))
            {
                <PropertyColumn Property="u => u.Email" Title="Email" Editable="false"/>
                <PropertyColumn Property="u => u.Username" Title="Benutzername" Editable="false"/>
                <PropertyColumn Property="u => u.Fullname" Title="Name" Editable="false"/>
                <PropertyColumn Property=@(u => string.Join(", ", u.Roles)) Title="Rollen" >
                    <EditTemplate>
                        <MudSelect T="string" SelectedValues="context.Item.Roles" SelectedValuesChanged="@((newRoles) => OnRolesChanged(context.Item, newRoles))" MultiSelection="true" Required Margin="Margin.Normal">
                            @foreach (var role in roles) 
                            {
                                <MudSelectItem T="string" Value="@role" Disabled="@(context.Item.Roles.Contains("Gesperrt") && role != "Gesperrt")">@role</MudSelectItem>
                            }
                        </MudSelect>
                    </EditTemplate>
                </PropertyColumn>
                    
                <TemplateColumn CellClass="d-flex justify-end">
                    <CellTemplate>
                        <MudIconButton Size="@Size.Small" Icon="@Icons.Material.Outlined.Edit" OnClick="@context.Actions.StartEditingItemAsync" />
                    </CellTemplate>
                </TemplateColumn>
            }
        </Columns>
        <PagerContent>
            @if (!string.IsNullOrEmpty(_searchString))
            {
                <MudDataGridPager T="EditRoleUser" />
            }
        </PagerContent>
    </MudDataGrid>
</div>