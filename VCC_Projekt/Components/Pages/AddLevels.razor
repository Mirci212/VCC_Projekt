@* @page "/add-levels"
@using Microsoft.AspNetCore.Components.Forms

<MudContainer>
    <!-- Event Auswahl -->
    <MudCard>
        <MudCardContent>
            <MudText Typo="Typo.h6">Event auswählen</MudText>
            <MudSelect Label="Event wählen" T="int" ValueChanged="OnEventSelected">
                @foreach (var ev in _events)
                {
                    <MudSelectItem Value="@ev.EventID">@ev.Bezeichnung</MudSelectItem>
                }
            </MudSelect>
        </MudCardContent>
    </MudCard>

    <!-- Levels hinzufügen -->
    <MudCard>
        <MudCardContent>
            <MudButton OnClick="AddLevel" Disabled="@(_levels.Count >= 5 || _selectedEventId == 0)" Color="Color.Primary">
                Neues Level hinzufügen
            </MudButton>
        </MudCardContent>
    </MudCard>

    <MudList T="Level" Reorderable="true" Items="@_levels">
    @for (int i = 0; i < _levels.Count; i++)
    {
        <MudListItem>
            <MudPaper Elevation="3" Class="pa-4 ma-2">
                <MudText Typo="Typo.h6">Level @(i + 1)</MudText>

                <MudFileUpload Label="Level-PDF hochladen" Accept=".pdf"
                               OnFileChanged="@(async files => await UploadFile(files, i))"/>

                <MudButton OnClick="() => AddTask(i)" Color="Color.Primary">Neue Aufgabe hinzufügen</MudButton>

                <MudList>
                    @if (_levels[i].Aufgaben != null && _levels[i].Aufgaben.Count > 0)
                    {
                        @for (int j = 0; j < _levels[i].Aufgaben.Count; j++)
                        {
                            <MudListItem>
                                <MudPaper Elevation="2" Class="pa-3 ma-2">
                                    <MudText Typo="Typo.body1">Aufgabe @(j + 1)</MudText>

                                    <MudFileUpload Label="Input.txt hochladen" Accept=".txt"
                                                   OnFileChanged="@(async files => await UploadTaskFile(files, i, j, "input"))"/>

                                    <MudFileUpload Label="Ergebnis.txt hochladen" Accept=".txt"
                                                   OnFileChanged="@(async files => await UploadTaskFile(files, i, j, "output"))"/>

                                    <MudButton OnClick="() => RemoveTask(i, j)" Color="Color.Error">Aufgabe entfernen</MudButton>
                                </MudPaper>
                            </MudListItem>
                        }
                    }
                </MudList>

                <MudButton OnClick="() => RemoveLevel(i)" Color="Color.Error">Level entfernen</MudButton>
            </MudPaper>
        </MudListItem>
    }
</MudList>


    <MudCard>
        <MudCardContent>
            <MudButton OnClick="SaveLevels" Color="Color.Primary" Disabled="@(_selectedEventId == 0)">Levels speichern</MudButton>
        </MudCardContent>
    </MudCard>
</MudContainer>
 *@