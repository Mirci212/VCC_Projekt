@page "/events-manager"
@using System.ComponentModel.DataAnnotations
@inject NavigationManager NavigationManager
@inject EmailSender EmailSender
@inject UserManager<ApplicationUser> UserManager
@inject ISnackbar Snachbar
@using System.Text
@using System.Text.Encodings.Web
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.WebUtilities
@using VCC_Projekt.Data
@using Microsoft.AspNetCore.Components.Forms;
@using System;
@using MudBlazor
@using Microsoft.AspNetCore.Authorization

@attribute [Authorize(Roles = "Admin")]

<PageTitle>Wettbewerb-Manager</PageTitle>

<div class="text-center">
    <MudText Typo="Typo.h2" style="color: #134883">Wettbewerb-Manager</MudText>
    <MudText Typo="Typo.subtitle1">Wähle ein Event aus, um dieses zu bearbeiten oder legen ein neues Event an.</MudText> <br />
</div>

<MudContainer MaxWidth="MaxWidth.False">
    <MudGrid Justify="Justify.Center">
        <MudItem xs="10">
            <MudSelect T="Event" Label="Event auswählen" ValueChanged="@(async e => await OnEventSelected(e))" ToStringFunc="@(e => e != null ? $"{e.Bezeichnung} (EventId:{e.EventID})" : "")" Variant="Variant.Outlined">
                @foreach (var ev in _events)
                {
                    <MudSelectItem Value="@ev">@ev.Bezeichnung (@ev.Beginn.ToString("d. MMMM yyyy", new System.Globalization.CultureInfo("de-DE")))</MudSelectItem>
                }
            </MudSelect>
        </MudItem>

        <MudItem xs="10" >
            @if (_selectedEvent.EventID != 0)
            {
                <MudCard Outlined="true">
                    <MudCardContent>
                        @if (_selectedEvent.Beginn > DateTime.Now)
                        {
                            <div class="text-end">
                                <MudButton Color="Color.Primary" StartIcon="@Icons.Material.Filled.Edit" OnClick="@ToggleEditMode">Wettbewerb bearbeiten</MudButton>
                            </div>
                        }

                        <EditForm EditContext="@editContext" OnValidSubmit="@UpdateEvent" method="post" FormName="eventRegistration">
                            <DataAnnotationsValidator />

                            <MudTextField @bind-Value="Input.EventName" Label="Wettbewerbsname" Variant="Variant.Outlined" Disabled="@(!isEditing)" Required="true"></MudTextField>

                            <MudDatePicker @bind-Date="Input.EventDate" Label="Datum" Variant="Variant.Outlined" Disabled="@(!isEditing)" Required="true" ShowToolbar="false"></MudDatePicker>

                            <div class="row mb-3">
                                <div class="col">
                                    <div class="form-floating">
                                        <MudTimePicker Label="Startzeit" @bind-Time="Input.StartTime" Variant="Variant.Outlined" Disabled="@(!isEditing)" Required="true"></MudTimePicker>
                                    </div>
                                </div>
                                <div class="col">
                                    <div class="form-floating">
                                        <MudTimePicker Label="Endzeit" @bind-Time="Input.EndTime" Variant="Variant.Outlined" Disabled="@(!isEditing)" Required="true"></MudTimePicker>
                                    </div>
                                </div>
                            </div>

                            <MudTextField @bind-Value="Input.PenaltyMinutes" Label="Strafminuten pro Fehlversuch" Variant="Variant.Outlined" Disabled="@(!isEditing)" Required="true"></MudTextField>

                            <div class="text-center">
                                @* Event noch nicht gestartet (Wettbewerb kann bearbeitet und gelöscht werden) *@
                                @if (_selectedEvent.Beginn > DateTime.Now)
                                {
                                    <MudButton ButtonType="ButtonType.Submit" Color="Color.Primary" StartIcon="@Icons.Material.Filled.Save" Disabled="@(!isEditing)">Wettbewerb speichern</MudButton>
                                    <MudButton OnClick="() => DeleteEvent()" Color="Color.Error" StartIcon="@Icons.Material.Filled.Delete" Disabled="@(!isEditing)">Wettbewerb löschen</MudButton> <br />
                                }

                                @* Event läuft (Dashboard sollte angezeigt werden) *@
                                else if (_selectedEvent.Beginn <= DateTime.Now && _selectedEvent.Beginn.AddMinutes(_selectedEvent.Dauer) >= DateTime.Now)
                                {
                                    <MudButton Href="@($"dashboard/{_selectedEvent.EventID}")" Color="Color.Primary" StartIcon="@Icons.Material.Filled.SpaceDashboard">Dashboard anzeigen</MudButton>
                                    <MudButton Href="@($"event-statistics/{_selectedEvent.EventID}")" Color="Color.Primary" StartIcon="@Icons.Material.Filled.LineAxis">Wettbewerbsstatistik anzeigen</MudButton>
                                }

                                @* Event vorbei (Statistik sollte angezeigt werden) *@
                                else
                                {
                                    <MudButton Href="@($"dashboard/{_selectedEvent.EventID}")" Color="Color.Primary" StartIcon="@Icons.Material.Filled.SpaceDashboard">Dashboard anzeigen</MudButton>
                                    <MudButton Href="@($"event-statistics/{_selectedEvent.EventID}")" Color="Color.Primary" StartIcon="@Icons.Material.Filled.LineAxis">Wettbewerbsstatistik anzeigen</MudButton>
                                }

                                <MudButton Href="/" Color="Color.Primary" StartIcon="@Icons.Material.Filled.Chat">Alle Teilnehmer benachrichtigen</MudButton>
                                <MudButton Href="view-participantsData" Color="Color.Primary" StartIcon="@Icons.Material.Filled.Person">Teilnehmerdaten einsehen</MudButton>
                            </div>
                        </EditForm>
                    </MudCardContent>
                </MudCard>
            }

            else
            {
                <MudCard Outlined="true">
                    <MudCardContent>
                        <EditForm EditContext="@editContext" OnValidSubmit="@CreateEvent" method="post" FormName="eventRegistration">
                            <DataAnnotationsValidator />

                            <MudTextField @bind-Value="Input.EventName" Label="Wettbewerbsname" Variant="Variant.Outlined" Required="true"></MudTextField>

                            <MudDatePicker @bind-Value="Input.EventDate" Label="Datum" Variant="Variant.Outlined" Required="true" ShowToolbar="false"></MudDatePicker>

                            <div class="row mb-3">
                                <div class="col">
                                    <div class="form-floating">
                                        <MudTimePicker Label="Startzeit" @bind-Value="Input.StartTime" Variant="Variant.Outlined" Required="true"></MudTimePicker>
                                    </div>
                                </div>
                                <div class="col">
                                    <div class="form-floating">
                                        <MudTimePicker Label="Endzeit" @bind-Value="Input.EndTime" Variant="Variant.Outlined" Required="true"></MudTimePicker>
                                    </div>
                                </div>
                            </div>

                            <MudTextField @bind-Value="Input.PenaltyMinutes" Label="Strafminuten pro Fehlversuch" Variant="Variant.Outlined" Required="true"></MudTextField>

                            <div class="text-center">
                                <MudButton ButtonType="ButtonType.Submit" Color="Color.Primary" StartIcon="@Icons.Material.Filled.Save">Wettbewerb anlegen</MudButton>
                            </div>

                        </EditForm>
                    </MudCardContent>
                </MudCard>
            }

        </MudItem>
    </MudGrid>
</MudContainer>
