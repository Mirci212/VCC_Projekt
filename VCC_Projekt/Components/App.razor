@inject IConfiguration Configuration
<!DOCTYPE html>
<html lang="en">

<head>

    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <base href="@BasePath" />
    <link href="https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap" rel="stylesheet" /> 
    <link href="_content/MudBlazor/MudBlazor.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="bootstrap/bootstrap.min.css" />
    <link rel="stylesheet" href="app.css" />
    <link rel="stylesheet" href="VCC_Projekt.styles.css" />
    <link rel="icon" type="image/png" href="favicon.png" />
    <HeadOutlet @rendermode="RenderModeForPage" />

</head>

<body>
    <Routes @rendermode="RenderModeForPage" />
    <script src="_framework/blazor.web.js"></script>
    <script src="_content/MudBlazor/MudBlazor.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js@2.9.4/dist/Chart.min.js"></script>
    <script src="_content/ChartJs.Blazor.Fork/ChartJsBlazorInterop.js"></script>

</body>

</html>

@code {
    [CascadingParameter]
    public HttpContext? _httpContext { get; set; }


    private IComponentRenderMode? RenderModeForPage =>
        _httpContext.Request.Path.StartsWithSegments("/account", StringComparison.OrdinalIgnoreCase)
            ? null
            : InteractiveServer;
    public static string BasePath { get; set; } = "/";

    protected override void OnInitialized()
    {
        base.OnInitialized();
        BasePath = Configuration.GetValue<string>("BasePath") ?? "/";
    }

}